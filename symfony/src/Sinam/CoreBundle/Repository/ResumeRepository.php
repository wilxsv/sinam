<?php

namespace Sinam\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Sinam\CoreBundle\Entity\FarmCatalogoproductos;
use Sinam\CoreBundle\Entity\CtlMunicipio;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * ResumeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ResumeRepository extends EntityRepository
{
	public function findByTotalNacionalSINAB( $id ){
		$query = $this->getEntityManager()
            ->createQuery("SELECT d.nombre AS depto, sm.nombre AS nombre, COUNT(sm.idpro) AS establecimiento, SUM(ea.cantidaddisponible) AS total
              FROM SinamCoreBundle:FarmCatalogoproductos m, SinamCoreBundle:SabCatCatalogoproductos AS sm, SinamCoreBundle:SabAlmExistenciasalmacenes AS ea, SinamCoreBundle:SabCatAlmacenes AS a, SinamCoreBundle:SabCatAlmacenesestablecimientos AS ae, SinamCoreBundle:SabCatEstablecimientos e, SinamCoreBundle:CtlMunicipio AS mu, SinamCoreBundle:CtlDepartamento AS d, SinamCoreBundle:SabCatUnidadmedidas AS u
              WHERE sm.nombre = :medicamento AND m.codigo = sm.codigo AND sm.idpro = ea.idProducto AND ea.idAlmacen = a.id AND a.id = ae.idAlmacen AND ae.idEstablecimiento = e.id AND e.idMunicipio = mu.id AND mu.idDepartamento = d.id AND sm.idUnidadmedida = u.id
              GROUP BY sm.nombre, d.nombre
              ORDER BY sm.nombre, d.nombre ASC")
            ->setParameters(array('medicamento' => $id));
        try {
        	return $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
        	$query = null;
        }
    }

	public function findByTotalNacionalSIAP( $id ){
		$query = $this->getEntityManager()
            ->createQuery("SELECT f.farmacia AS farmacia, u.descripcion AS unidad, SUM(ex.existencia) AS existencia, e.id AS id
	          FROM SinamCoreBundle:SabCatCatalogoproductos AS ms, SinamCoreBundle:FarmCatalogoproductos AS m, SinamCoreBundle:FarmMedicinaexistenciaxarea AS ex, SinamCoreBundle:MntAreafarmacia AS af, SinamCoreBundle:MntFarmacia AS f, SinamCoreBundle:CtlEstablecimiento AS e, SinamCoreBundle:CtlMunicipio AS mu, SinamCoreBundle:CtlDepartamento AS d, SinamCoreBundle:SabCatUnidadmedidas AS u 
    	      WHERE ms.nombre  = :$id AND ms.codigo = m.codigo AND m.id = ex.idmedicina AND ex.idarea = af.id AND ex.idestablecimiento = e.id AND af.idfarmacia = f.id AND ms.idUnidadmedida = u.id AND e.idMunicipio = mu.id AND mu.idDepartamento = d.id
        	  GROUP BY ms.nombre, f.farmacia, u.descripcion, e.id
       		  ORDER BY f.farmacia ASC")
            ->setParameters(array('medicamento' => $id));
        try {
        	return $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
        	$query = null;
        }
    }

	public function findByTotalEstablecimientoConsumo( $id ){
   $query = $this->getEntityManager()
            ->createQuery('SELECT sm.nombre AS nombre, e.nombre AS establecimiento, e.latitud AS latitud, e.longitud AS longitud
              FROM SinamCoreBundle:FarmCatalogoproductos m, SinamCoreBundle:SabCatCatalogoproductos AS sm, SinamCoreBundle:CtlAbastecimiento AS a, SinamCoreBundle:CtlMunicipio AS mu, SinamCoreBundle:CtlDepartamento AS d, SinamCoreBundle:CtlEstablecimiento AS e
              WHERE sm.nombre = :medicamento AND m.codigo = sm.codigo AND a.idProducto = m.id AND a.idEstablecimiento = e.id AND e.idMunicipio = mu.id AND mu.idDepartamento = d.id
              ORDER BY m.nombre ASC')->setParameters(array('medicamento' => $id));
        try {
        	return $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
        	$query = null;
        }
    }

	public function findByHistoricoConsumo( $id, $idEstablecimiento ){
		$idEstablecimiento = ($idEstablecimiento > 0) ? " AND e.idEstablecimiento = $idEstablecimiento " : '';
   		$query = $this->getEntityManager()
            ->createQuery("SELECT r.fechaentrega AS fecha, SUM(r.cantidad) AS cantidad
              FROM SinamCoreBundle:FarmCatalogoproductos m, SinamCoreBundle:SabCatCatalogoproductos AS sm, SinamCoreBundle:FarmMedicinarecetada AS r, SinamCoreBundle:CtlMunicipio AS mu, SinamCoreBundle:CtlDepartamento AS d, SinamCoreBundle:CtlEstablecimiento AS e
              WHERE sm.nombre = :medicamento AND m.codigo = sm.codigo AND r.idmedicina = m.id AND r.idestablecimiento = e.id AND e.idMunicipio = mu.id AND mu.idDepartamento = d.id $idEstablecimiento
              GROUP BY r.fechaentrega 
              ORDER BY r.fechaentrega ASC")->setParameters(array('medicamento' => $id));
        try {
        	return $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
        	$query = null;
        }
    }

	public function findByTotalConsumo( $id ){
		$anyo = 'AND a.anyo = '.(date("Y")-1);
		$query = $this->getEntityManager()
            ->createQuery("SELECT d.nombre AS depto, sm.nombre AS nombre, COUNT(sm.idpro) AS establecimiento, SUM(a.cantidad) AS total
              FROM SinamCoreBundle:FarmCatalogoproductos m, SinamCoreBundle:SabCatCatalogoproductos AS sm, SinamCoreBundle:CtlAbastecimiento AS a, SinamCoreBundle:CtlEstablecimiento e, SinamCoreBundle:CtlMunicipio AS mu, SinamCoreBundle:CtlDepartamento AS d
              WHERE sm.nombre = :medicamento AND m.codigo = sm.codigo AND a.idProducto = m.id AND a.idEstablecimiento = e.id AND e.idMunicipio = mu.id AND mu.idDepartamento = d.id $anyo
              GROUP BY sm.nombre, d.nombre
              ORDER BY sm.nombre, d.nombre ASC")
            ->setParameters(array('medicamento' => $id));
        try {
        	return $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
        	$query = null;
        }
    }

	public function findByHistoricoMensualConsumo( $id, $idEstablecimiento ){
		$idEstablecimiento = ($idEstablecimiento > 0) ? " AND e.idEstablecimiento = $idEstablecimiento " : '';
		$query = $this->getEntityManager()
            ->createQuery("SELECT a.anyo, a.mes, SUM(a.cantidad) AS cantidad
              FROM SinamCoreBundle:FarmCatalogoproductos m, SinamCoreBundle:SabCatCatalogoproductos AS sm, SinamCoreBundle:CtlAbastecimiento AS a, SinamCoreBundle:CtlEstablecimiento e, SinamCoreBundle:CtlMunicipio AS mu, SinamCoreBundle:CtlDepartamento AS d
              WHERE sm.nombre = :medicamento AND m.codigo = sm.codigo AND a.idProducto = m.id AND a.idEstablecimiento = e.id AND e.idMunicipio = mu.id AND mu.idDepartamento = d.id $idEstablecimiento
              GROUP BY a.anyo, a.mes
              ORDER BY a.anyo, a.mes ASC")
            ->setParameters(array('medicamento' => $id));
        try {
        	return $query->getResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
        	$query = null;
        }
    }
}
