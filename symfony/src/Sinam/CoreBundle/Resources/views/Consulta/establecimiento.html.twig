{% extends 'SinamCoreBundle::default.html.twig' %}
{% block body %}
<div class="col-sm-12">
          <div class="service-accordion">
           <div class="accordion">
            <div aria-multiselectable="true" role="tablist" id="accordion" class="panel-group">
              <div class="panel panel-default">
                <div id="headingOne" role="tab" class="panel-heading">
                  <h4 class="panel-title">
                    <a aria-controls="collapseOne" aria-expanded="true" href="#collapseOne" data-parent="#accordion" data-toggle="collapse">
                      Busqueda medicamento
                    </a>
                  </h4>
                </div>
                <div aria-labelledby="headingOne" role="tabpanel" class="panel-collapse collapse in" id="collapseOne" aria-expanded="true">
                  <div class="panel-body">
                    <p>
                     <div id="respond">
                      <form class="commentform" method="post">
                        
                          Digite el nombre del medicamento
                          <div class="ui-widget"><select id="basica_nombre" style="width: 90%" >
                            <option value="">Ingrese el medicamento</option>
                            {% for item in todos %}
                              <option value="{{item.idpro}}">{{item.nombre}}</option>
                            {% endfor %}
                          </select></div>
                          <button id="establecimiento_save" class="submit-btn" type="submit">Buscar</button>
                        
                        <label><input type="checkbox" name="colorCheckbox" value="filtro"> Filtrar b√∫squeda</label>
                        <div class="filtro box">
                        {{ form_label(form.departamento) }}<br />{{ form_widget(form.departamento) }}<br />
                        {{ form_label(form.municipio) }}<br />{{ form_widget(form.municipio) }}<br />
                        {{ form_label(form.establecimiento) }}<br />{{ form_widget(form.establecimiento) }}<br />
                        Numero de establecimientos: 
                          <input type="text" id="limite" readonly style="border:0; color:#f6931f; font-weight:bold;">
                          <div id="slider-range-min"></div><br />
                         <p align="right">
                          <button id="establecimiento_type_save" class="submit-btn" type="submit" >Aplicar filtro</button>
                         </p> 

                        </div>
                      </form>
                     </div>
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>    
        </div>
</div>
<div id="resMap" class="col-sm-4">
  <div class="panel panel-primary">
    <div class="panel-heading"><h2 class="panel-title">Establecimientos</h2></div>
      <div class="panel-body">
        <br /><br /><br /><br />
      </div>
    </div>
</div>
<div  id="Map" class="col-sm-8" style="height: 400px;></div>
<div  id="resultado" class="col-sm-12"></div>
{% endblock %}
{% block js_head %}
 <script src="{{ asset('assets/js/OpenLayers-2.13.1/OpenLayers.js') }}"></script>
    <script type="text/javascript">
        var lon = -89.218846;
        var lat = 13.697911;
        var zoom = 9;
        var map, layer;

        function init(){
          map = new OpenLayers.Map("Basico");
          var mapnik         = new OpenLayers.Layer.OSM();
          var fromProjection = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
          var toProjection   = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
          var position       = new OpenLayers.LonLat(lon,lat).transform( fromProjection, toProjection);

            map = new OpenLayers.Map( 'Map' );
            layer = new OpenLayers.Layer.MapServer( "Establecimientos", 
                    "https://geo.salud.gob.sv/cgi-bin/mapserv?MAP=/var/www/geo/geo/maps/wms/minsal.map&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&LAYERS=minsal&SRS=EPSG:4326&BBOX=-90.1913,12.7068,-87.6231,14.9026&FORMAT=image/png", {layers: 'basic'},
                    {gutter: 15});

            map.addLayer(layer);
            map.addLayer(mapnik);
            map.setCenter(new OpenLayers.LonLat(lon, lat), zoom);
            map.addControl( new OpenLayers.Control.LayerSwitcher() );
        }
        
    </script>
    <script src='https://www.google.com/recaptcha/api.js?hl=es'></script>
    <link rel="stylesheet" href="{{ asset('assets/css/jquery-ui-bootstrap-master/jquery.ui.theme.css') }}">
    <link rel="stylesheet" href="{{ asset('assets/css/jquery-ui/jquery-ui.css') }}">
    <script src="{{ asset('assets/js/jquery-1.11.2.min.js') }}"></script>
    <script src="{{ asset('assets/css/jquery-ui/jquery-ui.js') }}"></script>
<style type="text/css">
    .box{
        padding: 20px;
        display: none;
        margin-top: 20px;
        border: 1px solid #000;
    }
</style>
<script type="text/javascript">
jQuery(document).ready(function( $ ) {
    $('input[type="checkbox"]').click(function(){
        if($(this).attr("value")=="filtro"){
            $(".filtro").toggle();
        }
    });
});
</script>
<script type="text/javascript">
  function cargarMun(valor) {
    var arrayValores=new Array( 
      {% for item in muni %}
        new Array({{item.depto}},{{item.id}},"{{item.nombre}}"),
      {% endfor %}
      new Array(-1,1,"") );
    if(valor==0) {
      document.getElementById("basica_municipio").options.length=0;
      document.getElementById("basica_establecimiento").options.length=0;
      document.getElementById("basica_municipio").disabled=true; 
      document.getElementById("basica_establecimiento").disabled=true; 
    }else{
      document.getElementById("basica_municipio").options.length=0;
      document.getElementById("basica_municipio").options[0]=new Option("Selecciona un municipio", "0");
      for(i=0;i<arrayValores.length;i++) {
        if(arrayValores[i][0]==valor) { 
          document.getElementById("basica_municipio").options[document.getElementById("establecimiento_municipio").options.length]=new Option( arrayValores[i][2], arrayValores[i][1]);
        }
      }
      document.getElementById("establecimiento_municipio").disabled=false;
    }
  }
  function cargarEsta(valor) {
    var arrayValores=new Array( 
      {% for item in establecimiento %}
        new Array({{item.idMunicipio}},{{item.id}},"{{item.nombre}}"),
      {% endfor %}
      new Array(-1,1,"") );
    if(valor>0) {
      document.getElementById("basica_establecimiento").options.length=0;
      document.getElementById("basica_establecimiento").options[0]=new Option("Selecciona un establecimiento", "0");
      for(i=0;i<arrayValores.length;i++) {
        if(arrayValores[i][0]==valor) { 
          document.getElementById("basica_establecimiento").options[document.getElementById("basica_establecimiento").options.length]=new Option(arrayValores[i][2], arrayValores[i][1]);
        } 
      }
      document.getElementById("basica_establecimiento").disabled=false;
    }
  }
</script>
<style>
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 5px 10px;
  }
  .ui-autocomplete-input
{ 
    width: 700px;
}
.title .ui-autocomplete-input
{ 
    width: 700px
}
</style>
  <script>  
     (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 3,
            source: $.proxy( this, "_source" ),
            open: function(event, ui) { $(this).autocomplete("widget").css({ "width": 400 }); }
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
  
  $(function($) {
    $( "#establecimiento_nombre" ).combobox();
    $( "#slider-range-min" ).slider({
      range: "min",
      value: 7,
      min: 1,
      max: 25,
      slide: function( event, ui ) {
        $( "#limite" ).val( "" + ui.value );
      }
    });
    $( "#limite" ).val( "" + $( "#slider-range-min" ).slider( "value" ) );
  });
  </script>
{% endblock %}
{% block body_tag %}onload="init()"{% endblock %}